Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2015-06-03T10:54:42+02:00

====== dmt ======
Created Wednesday 03 June 2015

decide time to use:
SnapRecordUtils.getTime(SnapRecord, defaultVal): ADF_Zeit_Quotierung, ADF_Boersenzeit, ADF_Zeit
PriceRecordVwd.getPriceDate(): pay attention to the comments

// File: src/scripts/appstatus.groovy
import grails.util.Environment
import static grails.util.Metadata.current as metaInfo

header 'Application Status'
row 'App version', metaInfo['app.version']
row 'Grails version', metaInfo['app.grails.version']
row 'Groovy version', GroovySystem.version
row 'JVM version', System.getProperty('java.version')
row 'Reloading active', Environment.reloadingAgentEnabled
row 'Controllers', grailsApplication.controllerClasses.size()
row 'Domains', grailsApplication.domainClasses.size()
row 'Services', grailsApplication.serviceClasses.size()
row 'Tag Libraries', grailsApplication.tagLibClasses.size()
println()

header 'Installed Plugins'
ctx.getBean('pluginManager').allPlugins.each { plugin ->
	row plugin.name, plugin.version
}

void row(final String label, final value) {
	println label.padRight(18) + ' : ' + value.toString().padLeft(8)
}

void header(final String title) {
	final int length = 29
	println '-' * length
	println title.center(length)
	println '-' * length
}

grails run-app --debug-jvm -port=5005

auto timestamp a domain only applicable through grails. If you want to update some child domains among many, you don't want to load all of them and then update some, then save. More efficient will be issue the update with HQL. But then the auto timestamp "lastUpdate" won't be set automatically.
